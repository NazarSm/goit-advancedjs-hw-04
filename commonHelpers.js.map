{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport axios from 'axios';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst API_KEY = '42430851-e611567fbd1b8d73c000ca0dd';\nconst API_URL = 'https://pixabay.com/api/';\n\nconst searchForm = document.getElementById('search-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nlet itemsCount = 0;\nlet fetchedItemCount = 0;\nlet page = 1;\nlet searchValue = '';\n\nconst lightbox = new SimpleLightbox(\".photo_link\");\n\nconst showError = (error) => {\n  loader.classList.add('visually-hidden');\n\n  iziToast.error({ message: error.message });\n};\n\nconst showCards = (data) => {\n  const markup = data.map((\n    {\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    }) => `\n    <div class='photo-card'>\n      <a class='photo_link' href='${largeImageURL}'>\n        <img class='photo' src='${webformatURL}' alt='${tags}' loading='lazy' />\n      </a>\n      <div class='info'>\n        <div class='info-item'>\n          <b>Likes</b>\n          <p>${likes}</p>\n        </div>\n        <div class='info-item'>\n          <b>Views</b>\n           <p>${views}</p>\n        </div>\n        <div class='info-item'>\n          <b>Comments</b>\n          <p>${comments}</p>\n        </div>\n        <div class='info-item'>\n          <b>Downloads</b>\n          <p>${downloads}</p>\n        </div>\n      </div>\n    </div>\n  `).join('');\n\n  fetchedItemCount += data.length;\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  lightbox.refresh();\n}\n\nconst resetParams = ()  =>{\n  page = 1;\n  searchValue = '';\n  itemsCount = 0;\n  fetchedItemCount = 0;\n\n  gallery.textContent = '';\n};\n\nconst handleSubmit = async (event) => {\n  event.preventDefault();\n\n  resetParams();\n\n  searchValue = event.target.elements.searchQuery.value.trim();\n\n  if (!searchValue) {\n    searchForm.reset();\n\n    return;\n  }\n\n  loader.classList.remove('visually-hidden');\n\n  try {\n    const response = await fetchImages(searchValue, page);\n    const imageData = response.data;\n\n    itemsCount = imageData.totalHits;\n\n    if (!itemsCount) {\n      iziToast.error({\n        message: 'Sorry, there are no images matching your search query. Please try again.',\n      });\n    }\n\n    showCards(imageData.hits);\n\n    loader.classList.add('visually-hidden');\n\n    window.addEventListener('scroll', handleScroll);\n  } catch (error) {\n    showError(error);\n  }\n};\n\nconst handleScroll = async () => {\n  const isBottom = window.scrollY + window.innerHeight >=\n    document.documentElement.scrollHeight;\n\n  if (!isBottom) {\n    return;\n  }\n\n  if (itemsCount < fetchedItemCount) {\n    window.removeEventListener('scroll', handleScroll);\n\n    gallery.insertAdjacentHTML(\n      'beforeend',\n      \"<p>We're sorry, but you've reached the end of search results.</p>\",\n    );\n\n    return;\n  }\n\n  page++;\n\n  loader.classList.remove('visually-hidden');\n\n  try {\n    const response = await fetchImages(\n      searchValue,\n      page,\n    );\n\n    showCards(response.data.hits);\n\n    loader.classList.add('visually-hidden');\n  } catch (error) {\n    showError(error);\n  }\n\n};\n\nsearchForm.addEventListener('submit', handleSubmit);\n\nconst pixabay = axios.create({\n  baseURL: API_URL,\n});\n\nconst fetchImages = (q, page) => {\n  const searchParams = new URLSearchParams({\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 40,\n    page,\n    q,\n  });\n\n  return pixabay.get(`?${searchParams}`);\n}\n"],"names":["API_KEY","API_URL","searchForm","gallery","loader","itemsCount","fetchedItemCount","page","searchValue","lightbox","SimpleLightbox","showError","error","iziToast","showCards","data","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","resetParams","handleSubmit","event","imageData","fetchImages","handleScroll","response","pixabay","axios","q","searchParams"],"mappings":"owBAMA,MAAMA,EAAU,qCACVC,EAAU,2BAEVC,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAa,EACbC,EAAmB,EACnBC,EAAO,EACPC,EAAc,GAElB,MAAMC,EAAW,IAAIC,EAAe,aAAa,EAE3CC,EAAaC,GAAU,CAC3BR,EAAO,UAAU,IAAI,iBAAiB,EAEtCS,EAAS,MAAM,CAAE,QAASD,EAAM,OAAS,CAAA,CAC3C,EAEME,EAAaC,GAAS,CAC1B,MAAMC,EAASD,EAAK,IAAI,CACtB,CACE,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACN,IAAU;AAAA;AAAA,oCAE0BL,CAAa;AAAA,kCACfD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,eAK7CC,CAAK;AAAA;AAAA;AAAA;AAAA,gBAIJC,CAAK;AAAA;AAAA;AAAA;AAAA,eAINC,CAAQ;AAAA;AAAA;AAAA;AAAA,eAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,GAIrB,EAAE,KAAK,EAAE,EAEVjB,GAAoBS,EAAK,OAEzBZ,EAAQ,mBAAmB,YAAaa,CAAM,EAE9CP,EAAS,QAAO,CAClB,EAEMe,EAAc,IAAM,CACxBjB,EAAO,EACPC,EAAc,GACdH,EAAa,EACbC,EAAmB,EAEnBH,EAAQ,YAAc,EACxB,EAEMsB,EAAe,MAAOC,GAAU,CAOpC,GANAA,EAAM,eAAc,EAEpBF,IAEAhB,EAAckB,EAAM,OAAO,SAAS,YAAY,MAAM,OAElD,CAAClB,EAAa,CAChBN,EAAW,MAAK,EAEhB,MACD,CAEDE,EAAO,UAAU,OAAO,iBAAiB,EAEzC,GAAI,CAEF,MAAMuB,GADW,MAAMC,EAAYpB,EAAaD,CAAI,GACzB,KAE3BF,EAAasB,EAAU,UAElBtB,GACHQ,EAAS,MAAM,CACb,QAAS,0EACjB,CAAO,EAGHC,EAAUa,EAAU,IAAI,EAExBvB,EAAO,UAAU,IAAI,iBAAiB,EAEtC,OAAO,iBAAiB,SAAUyB,CAAY,CAC/C,OAAQjB,EAAO,CACdD,EAAUC,CAAK,CAChB,CACH,EAEMiB,EAAe,SAAY,CAI/B,GAHiB,OAAO,QAAU,OAAO,aACvC,SAAS,gBAAgB,aAM3B,IAAIxB,EAAaC,EAAkB,CACjC,OAAO,oBAAoB,SAAUuB,CAAY,EAEjD1B,EAAQ,mBACN,YACA,mEACN,EAEI,MACD,CAEDI,IAEAH,EAAO,UAAU,OAAO,iBAAiB,EAEzC,GAAI,CACF,MAAM0B,EAAW,MAAMF,EACrBpB,EACAD,CACN,EAEIO,EAAUgB,EAAS,KAAK,IAAI,EAE5B1B,EAAO,UAAU,IAAI,iBAAiB,CACvC,OAAQQ,EAAO,CACdD,EAAUC,CAAK,CAChB,EAEH,EAEAV,EAAW,iBAAiB,SAAUuB,CAAY,EAElD,MAAMM,EAAUC,EAAM,OAAO,CAC3B,QAAS/B,CACX,CAAC,EAEK2B,EAAc,CAACK,EAAG1B,IAAS,CAC/B,MAAM2B,EAAe,IAAI,gBAAgB,CACvC,IAAKlC,EACL,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,GACV,KAAAO,EACA,EAAA0B,CACJ,CAAG,EAED,OAAOF,EAAQ,IAAI,IAAIG,CAAY,EAAE,CACvC"}